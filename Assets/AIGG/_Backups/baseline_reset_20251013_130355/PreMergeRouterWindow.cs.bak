using System;
using System.Reflection;
using UnityEditor;
using UnityEngine;
namespace Aim2Pro.AIGG
{
    public class PreMergeRouterWindow : EditorWindow
    {
        private string _json = "";
        private Vector2 _scroll;

        [MenuItem("Window/Aim2Pro/Aigg/Pre-Merge Router", priority = 2000)]
        public static void ShowWindow()
        {
            var w = GetWindow<PreMergeRouterWindow>("Pre-Merge Router");
            w.minSize = new Vector2(520, 360);
            w.Show();
        }

        public static void OpenWithJson(string json)
        {
            var w = GetWindow<PreMergeRouterWindow>("Pre-Merge Router");
            w._json = json ?? "";
            w.Show();
            w.Repaint();
            w.ForwardToPasteAndMerge(json);
        }

        private void OnGUI()
        {
            EditorGUILayout.LabelField("Canonical JSON Input", EditorStyles.boldLabel);
            using (var s = new EditorGUILayout.ScrollViewScope(_scroll, GUILayout.ExpandHeight(true)))
            {
                _scroll = s.scrollPosition;
                _json = EditorGUILayout.TextArea(_json, GUILayout.ExpandHeight(true));
            }
            EditorGUILayout.Space();
            using (new EditorGUILayout.HorizontalScope())
            {
                if (GUILayout.Button("Forward to Paste & Merge", GUILayout.Height(28)))
                    ForwardToPasteAndMerge(_json);
                if (GUILayout.Button("Copy JSON", GUILayout.Height(28)))
                {
                    EditorGUIUtility.systemCopyBuffer = _json ?? "";
                    Debug.Log("[PreMergeRouter] JSON copied to clipboard");
                }
            }
        }

        private void ForwardToPasteAndMerge(string json)
        {
            if (string.IsNullOrWhiteSpace(json)) { Debug.Log("[PreMergeRouter] No JSON to forward."); return; }

            var asms = AppDomain.CurrentDomain.GetAssemblies();
            Type t = null; MethodInfo m = null;
            foreach (var a in asms)
            {
                t = a.GetType("Aim2Pro.AIGG.SpecPasteMergeWindow");
                if (t != null) { m = t.GetMethod("OpenWithJson", BindingFlags.Public | BindingFlags.Static); break; }
            }
            try
            {
                if (t != null)
                {
                    if (m != null) { m.Invoke(null, new object[] { json }); Debug.Log("[PreMergeRouter] Routed via SpecPasteMergeWindow.OpenWithJson"); return; }
                    var win = EditorWindow.GetWindow(t, false, "Paste & Merge", true);
                    var setJson = t.GetMethod("SetJson", BindingFlags.Public | BindingFlags.Instance);
                    if (setJson != null) setJson.Invoke(win, new object[] { json });
                    Debug.Log("[PreMergeRouter] Opened SpecPasteMergeWindow (instance fallback).");
                    return;
                }
            }
            catch (Exception e) { Debug.LogWarning("[PreMergeRouter] Reflection route failed: " + e.Message); }

            EditorGUIUtility.systemCopyBuffer = json;
            Debug.Log("[PreMergeRouter] SpecPasteMergeWindow not found. JSON copied to clipboard.");
        }
    }
}
